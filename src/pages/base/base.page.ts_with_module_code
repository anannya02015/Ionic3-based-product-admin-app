import { Component } from '@angular/core';
import { NgModule } from '@angular/core';
import { IonicModule, Platform } from 'ionic-angular';

import { TranslateModule } from 'ng2-translate/ng2-translate';
import { TranslateService } from 'ng2-translate';
import { Globalization } from '@ionic-native/globalization';
import { defaultLanguage, availableLanguages, sysOptions } from './base.constants';

@Component({
	templateUrl: 'base.html'
})
@NgModule({
	imports: [IonicModule, TranslateModule],
	declarations: [BasePage],
	entryComponents: [BasePage]
})
export class BasePage {
	languages = availableLanguages;
	selectedLanguage = sysOptions.systemLanguage;

	param = { value: 'world' };

	private translate: TranslateService;

	constructor(translate: TranslateService,private globalization: Globalization) {
		this.translate = translate;
		this.translate.setDefaultLang(defaultLanguage);
		
						if ((<any>window).cordova) {
							globalization.getPreferredLanguage().then(result => {
								var language = this.getSuitableLanguage(result.value);
								translate.use(language);
								sysOptions.systemLanguage = language;
							});
						} else {
							let browserLanguage = translate.getBrowserLang() || defaultLanguage;
							var language = this.getSuitableLanguage(browserLanguage);
							translate.use(language);
							sysOptions.systemLanguage = language;
						}
	}

	applyLanguage() {
		this.translate.use(this.selectedLanguage);
	}

	getSuitableLanguage(language) {
		language = language.substring(0, 2).toLowerCase();
		return availableLanguages.some(x => x.code == language) ? language : defaultLanguage;
	}
}
